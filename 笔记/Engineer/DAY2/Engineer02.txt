

#####################################################
案例4:编写一个判断脚本
在虚拟机 server0 上创建 /root/foo.sh 脚本
1)当运行/root/foo.sh redhat,输出为fedora
2)当运行/root/foo.sh fedora,输出为redhat
3)当没有任何参数或者参数不是 redhat 或者fedora时,
其错误输出产生以下信息: /root/foo.sh redhat|fedora

[root@server0 ~]# vim /root/foo.sh
#!/bin/bash
if [ $# -eq 0 ];then                     #判断用户是否输入参数
  echo '/root/foo.sh redhat|fedora' >&2  #将输出变成错误输出
  exit 3                          #脚本退出后状态值
elif [ $1 == redhat  ];then
  echo fedora
elif [ $1 == fedora  ];then
  echo redhat
else
  echo '/root/foo.sh redhat|fedora' >&2  #将输出变成错误输出
  exit 4                           #脚本退出后状态值
fi
[root@server0 ~]# chmod +x /root/foo.sh
[root@server0 ~]# /root/foo.sh redhat
[root@server0 ~]# /root/foo.sh fedora
[root@server0 ~]# /root/foo.sh haha
#####################################################
#######################################################
案例5:编写一个批量添加用户脚本
在 server0 上创建 /root/batchusers 脚本
1)此脚本要求提供用户名列表文件作为参数
2)如果没有提供参数,此脚本应该给出提示 
Usage: /root/batchusers,退出并返回相应值
3)如果提供一个不存在的文件,此脚本应该给出提
示 Input file not found,退出并返回相应值
4)新用户的登录Shell为 /bin/false,无需设置密码
5)用户列表测试文件:
 http://classroom/pub/materials/userlist
[root@server0 ~]# vim /root/userlist       
duanwu
zhongqiu
zhsan
lisi
dc
tc
haha
[root@server0 ~]# vim  /root/batchuser 
#!/bin/bash
if [ $# -eq 0 ];then                #判断用户是否输入命令行参数
 echo 'Usage: /root/batchusers' >&2  #将输出变成错误输出
 exit 2                         #脚本退出返回状态值
elif [ -f $1 ];then             #判断文件是否存在
 for a  in $(cat  $1)           #$()将命令的输出作为参数
 do
  useradd -s /bin/false  $a &> /dev/null
  echo $a创建成功
 done
else
 echo 'Input file not found' >&2   #将输出变成错误输出
 exit 3                            #脚本退出返回状态值
fi
[root@server0 ~]# chmod +x /root/batchuser 
[root@server0 ~]# /root/batchuser   /root/userlist

#####################################################
系统安全保护
SELinux概述
• Security-Enhanced Linux
– 美国NSA国家安全局主导开发,一套增强Linux系统安全的强制访问控制体系
– 集成到Linux内核(2.6及以上)中运行
– RHEL7基于SELinux体系针对用户、进程、目录和文件
提供了预设的保护策略,以及管理工具

SELinux运行模式的切换                                  
• SELinux的运行模式
– enforcing(强制)、permissive(宽松)
– disabled(彻底禁用)

 任何模式变成disabled(彻底禁用)，必须经历重起系统

• 切换运行模式
– 临时切换:setenforce 1|0
– 固定配置:/etc/selinux/config 文件

虚拟机server
[root@server0 ~]# getenforce     #查看当前SELinux的模式
Enforcing
[root@server0 ~]# setenforce 0   #临时修改当前SELinux的模式
[root@server0 ~]# getenforce 
Permissive
[root@server0 ~]# vim /etc/selinux/config   #永久修改
SELINUX=permissive

虚拟机desktop
[root@desktop0 ~]# getenforce     #查看当前SELinux的模式
Enforcing
[root@desktop0 ~]# setenforce 0   #临时修改当前SELinux的模式
[root@desktop0 ~]# getenforce 
Permissive
[root@desktop0 ~]# vim /etc/selinux/config   #永久修改
SELINUX=permissive

#######################################################
配置用户环境

alias别名设置
• 查看已设置的别名
– alias [别名名称]
• 定义新的别名
– alias 别名名称= '实际执行的命令行'
• 取消已设置的别名
– unalias [别名名称]

用户初始化文件
• 影响指定用户的 bash 解释环境
– ~/.bashrc,每次开启 bash 终端时生效

• 影响所有用户的 bash 解释环境
– /etc/bashrc,每次开启 bash 终端时生效

[root@server0 ~]# vim /root/.bashrc
alias hello='echo hello'
[root@server0 ~]# vim /home/student/.bashrc 
alias hi='echo hi'
[root@server0 ~]# vim /etc/bashrc 
alias haxi='echo hahaxixi'

开启一个新的终端进行验证
[root@server0 ~]# hello   #可以执行成功
[root@server0 ~]# hi      #运行失败
[root@server0 ~]# haxi    #可以执行成功

[root@server0 ~]# su - student
[student@server0 ~]$ hello   #运行失败
[student@server0 ~]$ hi      #可以执行成功
[student@server0 ~]$ haxi    #可以执行成功
[student@server0 ~]$ exit

######################################################
虚拟机server：构建基本Web服务

 Web服务：提供一个页面的内容服务
 httpd软件  Nginx软件   Tomcat软件

 http协议:超文本传输协议

1.安装提供Web服务的软件
[root@server0 ~]# yum -y install httpd
2.重起httpd程序（服务）
[root@server0 ~]# systemctl restart httpd
[root@server0 ~]# firefox 172.25.0.11
3.书写一个页面文件
   默认读取页面文件的路径：/var/www/html
   默认识别的首页文件名称：index.html
   书写页面内容的语言：html
[root@server0 ~]# vim /var/www/html/index.html
<marquee><font color=red><h1>NSD1908阳光明媚 请把字体变大
  滚动           字体颜色             标题字体大小
[root@server0 ~]# firefox 172.25.0.11

虚拟机server：构建基本FTP服务               

 FTP服务:将数据进行传输的服务
 vsftpd软件
 FTP协议：文件传输协议

1.安装提供FTP服务软件
[root@server0 ~]# yum -y install vsftpd
2.重起vsftpd服务
[root@server0 ~]# systemctl restart vsftpd
[root@server0 ~]# firefox ftp://172.25.0.11

  默认共享数据的路径：/var/ftp

######################################################
防火墙策略管理
  作用：隔离      严格过滤入站，允许出站
  
  硬件防火墙
  软件防火墙

firewalld服务基础
• 系统服务:firewalld
• 管理工具:firewall-cmd、firewall-config

预设安全区域
• 根据所在的网络场所区分,预设保护规则集
– public:仅允许访问本机的sshd dhcp ping个服务
– trusted:允许任何访问
– block:阻塞任何来访请求(明确拒绝，给客户端回应)
– drop:丢弃任何来访的数据包(直接丢弃，不给客户端回应，节省服务器资源)

防火墙判定规则：首先查看数据包中，源IP地址
1.查看所有区域规则，那个区域有该源IP地址的规则，则进入该区域
2.进入默认区域public

虚拟机server：                                   
]# firewall-cmd --get-default-zone  #查看默认区域
虚拟机desktop：
[root@desktop0 ~]# ping 172.25.0.11  #可以通信

虚拟机server：
]# firewall-cmd --set-default-zone=block  #修改默认区域
]# firewall-cmd --get-default-zone         #查看默认区域
虚拟机desktop：
[root@desktop0 ~]# ping 172.25.0.11  #不可以通信，有回应

虚拟机server：
]# firewall-cmd --set-default-zone=drop   #修改默认区域
]# firewall-cmd --get-default-zone    #查看默认区域
虚拟机desktop：
[root@desktop0 ~]# ping 172.25.0.11  #不可以通信，没有回应

#####################################################
防火墙默认区域的修改：
虚拟机server：
]# firewall-cmd --set-default-zone=public #修改默认区域
]# firewall-cmd --get-default-zone        #查看默认区域
]# firewall-cmd --zone=public --list-all  #查看区域规则
虚拟机desktop
]# firefox 172.25.0.11       #失败
]# firefox ftp://172.25.0.11  #失败

虚拟机server：
]# firewall-cmd --zone=public  --add-service=http #添加协议
]# firewall-cmd --zone=public  --add-service=ftp  #添加协议
]# firewall-cmd --zone=public  --list-all 
虚拟机desktop
]# firefox 172.25.0.11       #成功
]# firefox ftp://172.25.0.11  #成功


永久设置防火墙规则：添加协议
– 永久(permanent)
虚拟机server
#firewall-cmd --reload  #重新加载防火墙所有配置文件规则
#firewall-cmd --zone=public --list-all  #查看区域规则

#firewall-cmd --permanent --zone=public --add-service=ftp
#firewall-cmd --permanent --zone=public --add-service=http
#firewall-cmd --zone=public --list-all 

]# firewall-cmd --reload    #重新加载防火墙所有配置文件规则
]# firewall-cmd --zone=public --list-all 
]# systemctl enable httpd   #设置开机自启动
]# systemctl enable vsftpd  #设置开机自启动
 
]# reboot   #重起系统进行验证
]# firewall-cmd --zone=public --list-all 
#######################################################



































































