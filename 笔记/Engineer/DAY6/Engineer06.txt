                                          
环境的准备：
1.防火墙默认区域设置为trusted
虚拟机server
[root@server0 ~]# firewall-cmd --set-default-zone=trusted 
虚拟机desktop
[root@desktop0 ~]# firewall-cmd --set-default-zone=trusted

######################################################
配置网络参数：主机名、IP地址、子网掩码、网关地址、DNS服务器地址
配置方式1：nmtui

配置方式2：
一、永久主机名配置文件：/etc/hostname
[root@server0 ~]# echo A.tedu.cn  >  /etc/hostname  [root@server0 ~]# cat /etc/hostname
A.tedu.cn
[root@server0 ~]# hostname
A.tedu.cn
[root@server0 ~]# exit
登出
Connection to 172.25.0.11 closed.

[student@room9pc01 ~]$ gos
[root@A ~]# hostname
A.tedu.cn
[root@A ~]# 

二、永久配置IP地址、子网掩码、网关地址

 /etc/sysconfig/network-scripts/ifcfg-eth0(网卡配置文件)

1.查看nmcli识别的网卡名
[root@A ~]# nmcli connection show  
名称         
System eth0  

2.运行命令进行配置       
[root@A ~]# nmcli  connection  modify  'System eth0'       
  ipv4.method   manual                                  
  ipv4.addresses   '172.25.0.123/24   172.25.0.254'       
  connection.autoconnect   yes

[root@A ~]# nmcli  连接   修改   ‘网卡名’
   ipv4.方法   手工配置
   ipv4.地址    ‘ip地址/子网掩码   网关地址’
      每次开机自动启用

[root@A ~]# route -n    #查看网关地址
    Gateway         
    172.25.0.254    



3.激活配置
[root@A ~]# nmcli connection up 'System eth0'

三、指定DNS服务器地址配置文件
]# echo 'nameserver  172.25.0.254'  >  /etc/resolv.conf 

]# cat /etc/resolv.conf
nameserver 172.25.0.254

#####################################################
配置IPv6地址

• IPv4 地址表示
– 32个二进制位,点分隔的十进制数
– 例如:172.25.0.11、127.0.0.1

• IPv6 地址表示
– 128个二进制位,冒号分隔的16进制数表示
– 每段内连续的前置 0 可省略、连续的多个 : 可简化为 ::
– 例如:
   2003:ac18:0000:0000:0000:0000:0000:0305
   2003:ac18::305

[root@A ~]# nmcli  connection  modify  'System eth0' 
  ipv6.method  manual  ipv6.addresses  '2003:ac18::305/64' 
  connection.autoconnect   yes

[root@A ~]# nmcli connection up 'System eth0'
successfully 成功

[root@A ~]# ifconfig | head -4
[root@A ~]# ping6 2003:ac18::305

######################################################
配置聚合连接（链路聚合）,实现网卡的高可用


                 eth1             eth2

       虚拟化                     虚拟网卡：team0      
                                         192.168.1.1


虚拟机Server0
1.生成虚拟网卡team0               
 参考 man teamd.conf  进行全文查找/example 按n跳转匹配
                                       复制  "runner": {"name": "activebackup"}

[root@A ~]# nmcli connection add type team 
  ifname team0 con-name team0 autoconnect yes 
  config  '{"runner": {"name": "activebackup"}}'

[root@A ~]# nmcli 连接  添加  类型 team
     网卡名    team0  配置文件名  team0  每次开机自动启用
     链路聚合管理方式为  活跃备份的方式

[root@A ~]# ifconfig 
[root@A ~]# ls /etc/sysconfig/network-scripts/ifcfg-team0

2.添加成员
[root@A ~]# nmcli connection add type team-slave       
 ifname eth1 con-name team0-1 master team0

[root@A ~]# nmcli connection add type team-slave       
 ifname eth2 con-name team0-2 master team0

[root@A ~]# nmcli 连接   添加  类型  team-成员
  网卡名  eth1  成员配置文件名 team0-1  主设备 team0

3.配置team0的IP地址
[root@A ~]# nmcli connection modify team0 
 ipv4.method manual ipv4.addresses 192.168.1.1/24 
 connection.autoconnect  yes

4.激活配置
[root@A ~]# nmcli connection up team0    #激活主设备 
[root@A ~]# nmcli connection up team0-1  #激活成员
[root@A ~]# nmcli connection up team0-2  #激活成员

[root@A ~]# teamdctl team0 state   #查看team0组成信息

如果有报错，请删除所有重新来过
[root@A ~]# nmcli connection delete team0    #删除主设备配置 
[root@A ~]# nmcli connection delete team0-1  #删除成员配置
[root@A ~]# nmcli connection delete team0-2  #删除成员配置

###################################################
测试切换活跃网卡操作
[root@A ~]# ifconfig eth1 down
[root@A ~]# teamdctl team0 state

#######################################################
parted分区工具，支持gpt分区模式

   gpt分区模式： 128个主分区  空间支持18EB
                     1EB=1024PB
                     1PB=1024TB

[root@A ~]# parted   /dev/vdb                          
(parted) mktable gpt   #指定分区表模式为gpt
(parted) print            #输出分区表信息
(parted) mkpart           #划分新的分区
 分区名称？  []? haha          #分区名字随意
文件系统类型？  [ext2]? ext4   #分区文件系统，随意，不启实际作用
起始点？ 0                                           #起始点
结束点？ 3G                      #结束点
忽略/Ignore/放弃/Cancel? Ignore   #忽略分区表占用的空间
(parted) unit GB             #使用GB作为显示的单位
(parted) print 
(parted) mkpart
 分区名称？  []? haha 
文件系统类型？  [ext2]? ext4
起始点？ 3G          
结束点？ 5G 
(parted) quit                     #退出
[root@A ~]# lsblk 

######################################################
还原环境
[student@room9pc01 ~]$ rht-vmctl reset classroom
[student@room9pc01 ~]$ rht-vmctl reset server
[student@room9pc01 ~]$ rht-vmctl reset desktop

####################################################
基础邮件服务


  DNS服务器：虚拟机classroom
    server0.example.com

   邮箱账户： yg@server0.example.com
          xln@server0.example.com


电子邮件通信
• 电子邮件服务器的基本功能
– 为用户提供电子邮箱存储空间(用户名@邮件域名)
– 处理用户发出的邮件 —— 传递给收件服务器
– 处理用户收到的邮件 —— 投递到邮箱

虚拟机server：
1.安装postfix软件包
[root@server0 ~]# yum -y install postfix
[root@server0 ~]# rpm -q postfix
postfix-2.10.1-6.el7.x86_64

2.修改主配置文件
[root@server0 ~]# vim /etc/postfix/main.cf 
 vim末行模式下  ：set  nu  #开启行号功能

 99 myorigin = server0.example.com  #默认补全的域名后缀

 116 inet_interfaces = all  #允许本机所有接口使用邮件功能

 164 mydestination = server0.example.com 
                                                    #根据此字段的值，判断是否为本域邮件

     发件人：yg@server0.example.com 
     收件人：xln@server0.example.com 

3.重起postfix服务
[root@server0 ~]# systemctl restart postfix


使用mail命令发信/收信                                          
• mail -s  '邮件标题'     -r 发件人      收件人 
[root@server0 ~]# useradd  yg
[root@server0 ~]# useradd  xln
[root@server0 ~]# mail -s 'test01' -r yg  xln
hahaxixihehelele
.
EOT
[root@server0 ~]# echo haxi | mail -s 'test02' -r yg  xln

• mail [-u 用户名]
[root@server0 ~]# mail -u xln   #查看xln邮件

>N  1 yg@server0.example.c  Tue Sep 17 14:47  18/585   
& 1   输入邮件的编号,进行查看

#######################################################































































































